@model ML.Usuario
@{
    ViewData["Title"] = "Form";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="container">
    <h2>Usuarios</h2>

    <div class="row">

        <div class="col-md-12">

            @using (Html.BeginForm("Form", "Usuario", FormMethod.Post, new { enctype = "multipart/form-data" }))
            {

                <div class="form-horizontal">

                    <div class="form-group">
                        <div class="row">
                            <div class="col-1">

                                @Html.LabelFor(model => model.IdUsuario, new { style="display: none;"})

                                @Html.TextBoxFor(model => model.IdUsuario, new {style="display: none;", @class = "form-control" })

                                @Html.ValidationMessageFor(model => model.IdUsuario)

                            </div>
                            <div class="col-4">

                                @Html.LabelFor(model => model.Nombre)
                                <div class="input-group mb-3">
                                    <span class="input-group-text"><i class="bi bi-emoji-laughing"></i></span>
                                    @Html.TextBoxFor(model => model.Nombre, new { @class = "form-control", @id = "txtNombre",@onkeypress = "return SoloLetras(event,'lblNombre')" })
                                    @Html.ValidationMessageFor(model => model.Nombre)
                                </div>
                                @Html.Label("",null, new {@id="lblNombre"})
                            </div>

                            <div class="col-3">
                                @Html.LabelFor(model => model.ApellidoPaterno)
                                <div class="input-group mb-3">
                                    <span class="input-group-text"><i class="bi bi-emoji-sunglasses"></i></span>
                                     @Html.TextBoxFor(model => model.ApellidoPaterno, new { @class = "form-control",@id="txtApellidoPaterno",@onkeypress = "return SoloLetras(event,'lblApellidoPaterno')" })
                                     @Html.ValidationMessageFor(model => model.ApellidoPaterno)
                                </div>
                                @Html.Label("",null, new {@id="lblApellidoPaterno"})
                            </div>

                            <div class="col-3">

                                @Html.LabelFor(model => model.ApellidoMaterno)
                                <div class="input-group mb-3">
                                    <span class="input-group-text"><i class="bi bi-emoji-sunglasses-fill"></i></span>
                                    @Html.TextBoxFor(model => model.ApellidoMaterno, new { @class = "form-control",@id="txtApellidoMaterno",@onkeypress = "return SoloLetras(event,'lblApellidoMaterno')" })
                                    @Html.ValidationMessageFor(model => model.ApellidoMaterno)
                                </div>
                                @Html.Label("",null, new {@id="lblApellidoMaterno"})
                            </div>
                        </div>


                        <div class="row">

                            <div class="col-3">
                                @Html.LabelFor(model => model.FechaNacimiento)
                                 <div class="input-group mb-3">
                                    <span class="input-group-text"><i class="bi bi-calendar"></i></span>
                                    @Html.TextBoxFor(model => model.FechaNacimiento, new { @class = "form-control", @id="txtFechaNacimiento"  })
                                    @Html.ValidationMessageFor(model => model.FechaNacimiento)
                                </div>
                                
                            </div>

                            <div class="col-3">
                                @Html.LabelFor(model => model.Sexo)
                                @*@Html.TextBoxFor(model => model.Sexo, new { @class = "form-control" })*@
                                H
                                @Html.RadioButtonFor(model => model.Sexo,"H")
                                M
                                @Html.RadioButtonFor(model => model.Sexo,"M")
                                @Html.ValidationMessageFor(model => model.Sexo)
                            </div>

                            <div class=" col-3">
                                @Html.LabelFor(model=> model.Imagen)
                                <div class="input-group mb-3">
                                    <span class="input-group-text" id="basic-addon1"><i class="bi bi-card-image"></i></span>
                                    <input id="IFImage" type='file' class="form-control" name="IFImage" onchange="validateFile(this), readURL(this);  " />
                                </div>
                                
                            </div

                            <div class="col-3">
                                @if (Model.Imagen != null)
                                {
                                    <img id="Img" src="data:image/*;base64,@Model.Imagen" style="width:150px ; height:150px" />
                                }
                                else
                                {
                                    <img id="Img" src="~/Imagen/SinUsuario.png" style="width:150px ; height:150px" />
                                }
                                @Html.HiddenFor(model => model.Imagen)
                            </div>
                            
                        </div>


                        <div class="row">

                            <div class="col-md-3">
                                @Html.LabelFor(model => model.Curp)
                                <div class="input-group mb-3">
                                   <span class="input-group-text"><i class="bi bi-person-vcard"></i></span>
                                   @Html.TextBoxFor(model => model.Curp, new { @class = "form-control",@id="txtCurp", @onblur = "return SoloCurp(this,'lblCurp')"})
                                   @Html.ValidationMessageFor(model => model.Curp)
                                </div>
                                @Html.Label("",null, new {@id="lblCurp"})
                            </div>

                            <div class="col-md-3">
                                @Html.LabelFor(model => model.Celular)
                                <div class="input-group mb-3">
                                   <span class="input-group-text"><i class="bi bi-phone"></i></span>
                                   @Html.TextBoxFor(model => model.Celular, new { @class = "form-control",@id="txtCelular", @onkeypress = "return SoloNumeros(event,'lblCelular')" })
                                   @Html.ValidationMessageFor(model => model.Celular)
                                </div>
                                  @Html.Label("",null, new {@id="lblCelular"})
                            </div>

                            <div class="col-md-3">
                                @Html.LabelFor(model => model.Telefono)
                                <div class="input-group mb-3">
                                   <span class="input-group-text"><i class="bi bi-telephone-fill"></i></span>
                                   @Html.TextBoxFor(model => model.Telefono, new { @class = "form-control",@id="txtTelefono", @onkeypress = "return SoloNumeros(event,'lblTelefono')" })
                                   @Html.ValidationMessageFor(model => model.Telefono)
                                </div>
                                   @Html.Label("",null, new {@id="lblTelefono"})
                            </div>

                            <div class="col-md-3">
                                @Html.LabelFor(model => model.Rol.IdRol)
                                <div class="input-group mb-3">
                                   <span class="input-group-text"><i class="bi bi-person-rolodex"></i></span>
                                   @Html.DropDownListFor(model => model.Rol.IdRol, new SelectList(Model.Rol.Roles, "IdRol", "Nombre"), "Selecciona una opción", new { @class = "form-control" })
                                   @Html.ValidationMessageFor(model => model.Rol.IdRol)
                                </div>                     
                            </div>

                        </div>


                        <hr size="10" />
                        <h2>Registro</h2>

                        <div class="row">
                            <div class="col-md-3">
                                @Html.LabelFor(model => model.Email)
                                <div class="input-group mb-3">
                                   <span class="input-group-text"><i class="bi bi-envelope-at"></i></span>
                                   @Html.TextBoxFor(model => model.Email, new { @class = "form-control",@id="txtEmail", @onblur = "return SoloEmail(this,'lblEmail')" })
                                   @Html.ValidationMessageFor(model => model.Email)
                                </div>   
                                @Html.Label("",null, new {@id="lblEmail"})
                            </div>

                            <div class="col-md-3">
                                @Html.LabelFor(model => model.UserName)
                                <div class="input-group mb-3">
                                   <span class="input-group-text"><i class="bi bi-person-circle"></i></span>
                                   @Html.TextBoxFor(model => model.UserName, new { @class = "form-control",@id="txtUserName" })
                                   @Html.ValidationMessageFor(model => model.UserName)
                                </div> 
                                
                            </div>

                            <div class="col-md-3">
                                @Html.LabelFor(model => model.Password)
                                <div class="input-group mb-3">
                                   <span class="input-group-text"><i class="bi bi-pass"></i></span>
                                   @Html.TextBoxFor(model => model.Password, new { @class = "form-control",@id="txtPassword", @onblur = "return SoloContrasena(this,'lblContrasena')" })
                                   @Html.ValidationMessageFor(model => model.Password)
                                </div>
                                 @Html.Label("",null, new {@id="lblContrasena"})
                            </div>

                        </div>

                        <hr size="10" />
                        <h2>Direccion</h2>

                        <div class="row">
                            <div class="col-md-1">
                                @Html.LabelFor(model => model.Direccion.IdDireccion, new {style="display: none;"})
                                @Html.TextBoxFor(model => model.Direccion.IdDireccion, new {style="display: none;" ,@class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Direccion.IdDireccion)
                            </div>

                            <div class="col-md-3">
                                @Html.LabelFor(model => model.Direccion.Calle)
                                <div class="input-group mb-3">
                                   <span class="input-group-text"><i class="bi bi-book"></i></span>
                                   @Html.TextBoxFor(model => model.Direccion.Calle, new { @class = "form-control", @id="txtCalle" })
                                   @Html.ValidationMessageFor(model => model.Direccion.Calle)
                                </div> 
                                
                            </div>

                            <div class="col-md-3">
                                @Html.LabelFor(model => model.Direccion.NumeroInterior)
                                <div class="input-group mb-3">
                                   <span class="input-group-text"><i class="bi bi-1-square"></i></span>
                                   @Html.TextBoxFor(model => model.Direccion.NumeroInterior, new { @class = "form-control", @id="txtNumeroInterior"})
                                   @Html.ValidationMessageFor(model => model.Direccion.NumeroInterior)
                                </div> 
                                
                            </div>

                            <div class="col-md-3">
                                @Html.LabelFor(model => model.Direccion.NumeroExterior)
                                <div class="input-group mb-3">
                                   <span class="input-group-text"><i class="bi bi-123"></i></span>
                                   @Html.TextBoxFor(model => model.Direccion.NumeroExterior, new { @class = "form-control", @id="txtNumeroExterior"})
                                   @Html.ValidationMessageFor(model => model.Direccion.NumeroExterior)
                                </div> 

                                
                            </div>

                            <div class="col-md-2">
                                @Html.LabelFor(model => model.Direccion.Colonia.Municipio.Estado.Pais.IdPais)
                                <div class="input-group mb-3">
                                   <span class="input-group-text"><i class="bi bi-map"></i></span>
                                   @Html.DropDownListFor(model => model.Direccion.Colonia.Municipio.Estado.Pais.IdPais, new SelectList(Model.Direccion.Colonia.Municipio.Estado.Pais.Paises, "IdPais", "Nombre"), "Selecciona una opción", new { id = "ddlPais", @class = "form-control" })
                                   @Html.ValidationMessageFor(model => model.Direccion.Colonia.Municipio.Estado.Pais.IdPais)
                                </div> 
                                
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-3">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Direccion.Colonia.Municipio.Estado.IdEstado)
                                    <div class="input-group mb-3">
                                   <span class="input-group-text"><i class="bi bi-postage"></i></span>
                                       @if (Model.Direccion.Colonia.Municipio.Estado.Estados == null)
                                        {
                                            @Html.DropDownListFor(model => model.Direccion.Colonia.Municipio.Estado.IdEstado, new SelectList(string.Empty, "Value", "Text"), "Seleciona un estado", htmlAttributes: new { id = "ddlEstado", @class = "form-control" })
                                        }
                                        else
                                        {
                                            @Html.DropDownListFor(model => model.Direccion.Colonia.Municipio.Estado.IdEstado, new SelectList(Model.Direccion.Colonia.Municipio.Estado.Estados, "IdEstado", "Nombre"), "Seleciona un grupo", htmlAttributes: new { id = "ddlEstado", @class = "form-control" })
                                        }
                                    </div> 
                                    
                                </div>
                            </div>

                            <div class="col-md-3">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Direccion.Colonia.Municipio.IdMunicipio)
                                     <div class="input-group mb-3">
                                        <span class="input-group-text"><i class="bi bi-bricks"></i></span>
                                        @if (Model.Direccion.Colonia.Municipio.Municipios == null)
                                        {
                                            @Html.DropDownListFor(model => model.Direccion.Colonia.Municipio.IdMunicipio, new SelectList(string.Empty, "Value", "Text"), "Seleciona un municipio", htmlAttributes: new { id = "ddlMunicipio", @class = "form-control" })
                                        }
                                        else
                                        {
                                            @Html.DropDownListFor(model => model.Direccion.Colonia.Municipio.IdMunicipio, new SelectList(Model.Direccion.Colonia.Municipio.Municipios, "IdMunicipio", "Nombre"), "Seleciona un grupo", htmlAttributes: new { id = "ddlMunicipio", @class = "form-control" })
                                        }
                                    </div> 
                                    
                                </div>
                            </div>


                            <div class="col-md-3">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Direccion.Colonia.IdColonia)
                                 <div class="input-group mb-3">
                                   <span class="input-group-text"><i class="bi bi-house"></i></span>
                                   @if (Model.Direccion.Colonia.Colonias == null)
                                    {
                                        @Html.DropDownListFor(model => model.Direccion.Colonia.IdColonia, new SelectList(string.Empty, "Value", "Text"), "Seleciona una Colonia", htmlAttributes: new { id = "ddlColonia", @class = "form-control" })
                                    }
                                    else
                                    {
                                        @Html.DropDownListFor(model => model.Direccion.Colonia.IdColonia, new SelectList(Model.Direccion.Colonia.Colonias, "IdColonia", "Nombre"), "Seleciona un grupo", htmlAttributes: new { id = "ddlColonia", @class = "form-control" })
                                    }
                                 </div> 
                                    
                                </div>
                            </div>
                        </div>


                        <div class="form-group">

                            <div class="col-md-3">

                                <input type="submit" value="Guardar" class="btn btn-success" />

                                @Html.ActionLink("Regresar", "GetAll", "Usuario", htmlAttributes: new { @class = "btn btn-danger" })
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</div>


@section Scripts
{
<script src="~/lib/jquery/dist/jquery.js"></script>
<link rel="stylesheet" href="//code.jquery.com/ui/1.13.1/themes/base/jquery-ui.css">
<link rel="stylesheet" href="/resources/demos/style.css">
<script src="https://code.jquery.com/jquery-3.6.0.js"></script>
<script src="https://code.jquery.com/ui/1.13.1/jquery-ui.js"></script>
<script type="text/javascript">

        $(document).ready(function () {
            $("#ddlPais").change(function () {
                $("#ddlEstado").empty();
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("GetEstado")',
                    dataType: 'json',
                    data: { IdPais: $("#ddlPais").val() },
                    success: function (estados) {
                        $("#ddlEstado").append('<option value="0">' + 'Seleccione una opción' + '</option>');
                        $.each(estados, function (i, estados) {
                            $("#ddlEstado").append('<option value="'
                                + estados.idEstado + '">'
                                + estados.nombre + '</option>');
                        });
                    },
                    error: function (ex) {
                        alert('Failed.' + ex);
                    }
                });
            })
        })

        $(document).ready(function () {
            $("#ddlEstado").change(function () {
                $("#ddlMunicipio").empty();
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("GetMunicipio")',
                    dataType: 'json',
                    data: { IdEstado: $("#ddlEstado").val() },
                    success: function (municipios) {
                        $("#ddlMunicipio").append('<option value="0">' + 'Seleccione una opción' + '</option>');
                        $.each(municipios, function (i, municipios) {
                            $("#ddlMunicipio").append('<option value="'
                                + municipios.idMunicipio + '">'
                                + municipios.nombre + '</option>');
                        });
                    },
                    error: function (ex) {
                        alert('Failed.' + ex);
                    }
                });
            })
        })



            $(document).ready(function () {
            $("#ddlMunicipio").change(function () {
                $("#ddlColonia").empty();
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("GetColonia")',
                    dataType: 'json',
                    data: { IdMunicipio: $("#ddlMunicipio").val() },
                    success: function (colonias) {
                        $("#ddlColonia").append('<option value="0">' + 'Seleccione una opción' + '</option>');
                        $.each(colonias, function (i, colonias) {
                            $("#ddlColonia").append('<option value="'
                                + colonias.idColonia + '">'
                                + colonias.nombre + '</option>');
                        });
                    },
                    error: function (ex)
                    {
                        alert('Failed.' + ex);
                    }
                });
               })

            })

        function readURL(input)
        {
            if (input.files && input.files[0])
            {

                var reader = new FileReader();
                reader.onload = function (e) {
                    $('#Img').attr('src', e.target.result);
                };
                reader.readAsDataURL(input.files[0]);
            }
        }

        $(document).on('change', 'input[type="file"]', function () {
            // this.files[0].size recupera el tamaño del archivo
            // alert(this.files[0].size);

            var fileName = this.files[0].name;
            var fileSize = this.files[0].size;

            if (fileSize > 3000000) {
                alert('El archivo no debe superar los 3MB');
                this.value = '';
                this.files[0].name = '';
            } else {
                // recuperamos la extensión del archivo
                var ext = fileName.split('.').pop();

                // Convertimos en minúscula porque
                // la extensión del archivo puede estar en mayúscula
                ext = ext.toLowerCase();

                // console.log(ext);
                switch (ext) {
                    case 'jpg':
                    case 'jpeg':
                    case 'png':
                    case 'pdf': break;
                    default:
                        alert('El archivo no tiene la extensión adecuada');
                        this.value = ''; // reset del valor
                        this.files[0].name = '';
                }
            }
        });

    $( function() {
      $( "#txtFechaNacimiento" ).datepicker({dateFormat: 'dd-mm-yy',
                                  changeMonth: true,
                                  changeYear: true,
                                  yearRange: '-100:+0'
      });
    } );

    function SoloNumeros(e, controlId) {
        var caracter = e.key;
        if (!/^[0-9]/g.test(caracter)) {
            $('#' + controlId).text("Solo se aceptan numeros");
            $('#' + controlId).css({ "color": "red" });
            return false;
        }
        else {
            $('#' + controlId).text("");
            return true;
        }
         }

         function SoloLetras(e, controlId) {
        var caracter = e.key;
        if (!/^[a-zA-Z\s]/g.test(caracter)) {
            $('#' + controlId).text("Solo se aceptan letras sin acentos");
            $('#' + controlId).css({ "color": "red" });
            return false;
        }
        else {
            $('#' + controlId).text("");
            return true;
        }
         } 
         
         function SoloEmail(e, controlId) {
        var caracter = e.value;
        if (!/^([a-zA-Z0-9_.+-])+\@@(([a-zA-Z0-9-])+\.)+([a-zA-Z0-9]{2,4})+$/g.test(caracter)) {
            $('#' + controlId).text("No es un formato de email");
            $('#' + controlId).css({ "color": "red" });
            return false;
        }
        else {
            $('#' + controlId).text("");
            return true;
        }
         }

         
         function SoloContrasena(e, controlId) {
        var caracter = e.value;
        if (!/^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[$@@$!%*?&])[A-Za-z\d$@@$!%*?&]{10,15}/g.test(caracter)) {
            $('#' + controlId).text("La Contraseña debe tener:" +
                "---Minimo 8 caracteres---"+
                "---Maximo 15---"+
                "---Al menos una letra mayúscula---"+
                "---Al menos una letra minucula---"+
                "---Al menos un dígito---"+
                "---No espacios en blanco---"+
                "---Al menos 1 caracter especial");
            $('#' + controlId).css({ "color": "red" });
            return false;
        }
        else {
            $('#' + controlId).text("");
            return true;
            }
        }


        function SoloCurp(e, controlId) {
        var caracter = e.value;
        if (!/^[A-Z]{1}[AEIOU]{1}[A-Z]{2}[0-9]{2}(0[1-9]|1[0-2])(0[1-9]|1[0-9]|2[0-9]|3[0-1])[HM]{1}(AS|BC|BS|CC|CS|CH|CL|CM|DF|DG|GT|GR|HG|JC|MC|MN|MS|NT|NL|OC|PL|QT|QR|SP|SL|SR|TC|TS|TL|VZ|YN|ZS|NE)[B-DF-HJ-NP-TV-Z]{3}[0-9A-Z]{1}[0-9]{1}$/g.test(caracter)) {
            $('#' + controlId).text("No sigue la secuencia de un curp");
            $('#' + controlId).css({ "color": "red" });
            return false;
        }
        else {
            $('#' + controlId).text("");
            return true;
        }
         }

</script>

}